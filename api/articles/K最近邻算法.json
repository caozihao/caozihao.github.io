{"title":"K最近邻算法","slug":"K最近邻算法","date":"2018-12-26T02:12:47.000Z","updated":"2018-12-26T12:56:27.136Z","comments":true,"excerpt":"","content":"<h4 id=\"K最近邻算法\"><a href=\"#K最近邻算法\" class=\"headerlink\" title=\"K最近邻算法\"></a>K最近邻算法</h4><pre><code>//漫画算法图解 P163页\n// 求估计最近4天卖出面包的数量\nconst log = console.log.bind(this);\n\n  const algorithm = (originData,testData)=&gt;{\n      let result = [];\n      let value = [];\n      for(let item of testData){\n          for(let key in item){\n              value.push(calculateSimilarNumber(key,originData) );\n              result.push(item[key])\n          }\n\n      }\n      let limitNum = 4;\n      let sortArr = bubbleSort(value);\n      sortArr = sortArr.splice(0,limitNum);\n      let totalNum = sortArr.reduce((total,index)=&gt;{\n          return total + result[index];\n      },0)\n      // log(&apos;totalNum -&gt;&apos;,totalNum);\n      //  log(&apos;value -&gt;&apos;,value);\n      //  log(&apos;result -&gt;&apos;,result);\n      //  log(&apos;sortArr -&gt;&apos;,sortArr);\n      let averageNum = totalNum / limitNum;\n      // log(&apos;averageNum -&gt;&apos;,averageNum);\n      return averageNum\n  }\n\n  const calculateSimilarNumber = (compareData,originData)=&gt;{\n      let result = 0;\n      if(compareData.length &amp;&amp; originData.length){\n          let compareDataArr = compareData.split(&apos;,&apos;);\n          let originDataArr = originData.split(&apos;,&apos;);\n          for(let i =0;i &lt; compareDataArr.length;i++){\n              result += Math.pow(compareDataArr[i] - originDataArr[i],2);\n          }\n          result = Math.round(Math.sqrt(result) * 100) / 100;\n      }\n\n      return result;\n  }\n\n  const bubbleSort = (originArr)=&gt;{\n      let arr = [...originArr];\n      let sortArr = [];\n      for(let i =0;i &lt;arr.length;i++ ){\n          sortArr.push(i);\n      }\n      for(let i = 0; i &lt; arr.length - 1;i++){\n          for(let j=0;j &lt; arr.length-i-1;j++){\n              if(arr[j] &gt; arr[j+1]){\n                  let temp = arr[j];\n                  arr[j] = arr[j+1];\n                  arr[j+1] = temp;\n\n                  let temp2 = sortArr[j];\n                  sortArr[j] = sortArr[j+1];\n                  sortArr[j+1] = temp2;\n              }\n          }\n      }\n      return sortArr;\n  }\n\n  const testData = [\n      {\n          &apos;5,1,0&apos;:300\n      },\n      {\n          &apos;3,1,1&apos;:225\n      },\n      {\n          &apos;1,1,0&apos;:75\n      },\n      {\n          &apos;4,0,1&apos;:200\n      },\n      {\n          &apos;4,0,0&apos;:150\n      },\n      {\n          &apos;2,0,0&apos;:50\n      }\n  ]\n\n  const originData = &apos;4,1,0&apos;;\n\n  algorithm(originData,testData);\n</code></pre>","thumbnail":"/images/算法/bg.jpg","categories":[],"tags":[{"name":"算法","path":"api/tags/算法.json"},{"name":"K最近邻算法","path":"api/tags/K最近邻算法.json"}]}